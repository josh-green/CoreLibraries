//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplications.Utilities.Database.Test {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebApplications.Utilities.Database.Test.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [dbo].[{0}] @ID nvarchar(MAX)
        ///AS
        ///BEGIN
        ///SELECT @ID
        ///END.
        /// </summary>
        internal static string BadSqlProc {
            get {
                return ResourceManager.GetString("BadSqlProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;param name=&quot;p{0}&quot;&gt;Parameter {1} of type &lt;see cref=&quot;T{0}&quot;/&gt;.&lt;/param&gt;.
        /// </summary>
        internal static string CommentTemplate {
            get {
                return ResourceManager.GetString("CommentTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;param name=&quot;p{0}Name&quot;&gt;Name of parameter {1}.&lt;/param&gt;.
        /// </summary>
        internal static string CommentTemplate2 {
            get {
                return ResourceManager.GetString("CommentTemplate2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP PROCEDURE [dbo].[{0}].
        /// </summary>
        internal static string DropSqlProc {
            get {
                return ResourceManager.GetString("DropSqlProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Executes a Transact-SQL statement against the connection and returns the number of rows affected.
        ///        /// &lt;/summary&gt;
        ///{0}
        ///        /// &lt;param name=&quot;resultAction&quot;&gt;The result action.&lt;/param&gt;
        ///        /// &lt;param name=&quot;executeAgainstAllConnections&quot;&gt;if set to &lt;c&gt;true&lt;/c&gt; will execute the program against all connections.&lt;/param&gt;
        ///        /// &lt;exception cref=&quot;T:System.Data.SqlClient.SqlException&quot;&gt;An exception occurred while executing the command against a locked row. This ex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExecuteNonQuery {
            get {
                return ResourceManager.GetString("ExecuteNonQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Executes the program with the specified parameters.
        ///        /// &lt;/summary&gt;
        ///{0}
        ///        /// &lt;param name=&quot;resultAction&quot;&gt;The result action.&lt;/param&gt;
        ///        /// &lt;param name=&quot;behavior&quot;&gt;The behaviour.&lt;/param&gt;
        ///        /// &lt;param name=&quot;executeAgainstAllConnections&quot;&gt;if set to &lt;c&gt;true&lt;/c&gt; will execute the program against all connections.&lt;/param&gt;
        ///        /// &lt;exception cref=&quot;T:System.Data.SqlClient.SqlException&quot;&gt;An exception occurred while executing the command against a locked [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExecuteReader {
            get {
                return ResourceManager.GetString("ExecuteReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
        ///        /// &lt;/summary&gt;
        ///{0}
        ///        /// &lt;param name=&quot;resultAction&quot;&gt;The result action.&lt;/param&gt;
        ///        /// &lt;param name=&quot;executeAgainstAllConnections&quot;&gt;if set to &lt;c&gt;true&lt;/c&gt; will execute the program against all connections.&lt;/param&gt;
        ///        /// &lt;exception cref=&quot;T:System.Data.SqlClient.SqlException&quot;&gt;An exception occurred while ex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExecuteScalar {
            get {
                return ResourceManager.GetString("ExecuteScalar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         /// &lt;summary&gt;
        ///        /// Sends the &lt;see cref=&quot;P:System.Data.SqlClient.SqlCommand.CommandText&quot;/&gt; to the &lt;see cref=&quot;P:System.Data.SqlClient.SqlCommand.Connection&quot;/&gt; and builds an &lt;see cref=&quot;T:System.Xml.XmlReader&quot;/&gt; object.
        ///        /// &lt;/summary&gt;
        ///{0}
        ///        /// &lt;param name=&quot;resultAction&quot;&gt;The result action.&lt;/param&gt;
        ///        /// &lt;param name=&quot;executeAgainstAllConnections&quot;&gt;if set to &lt;c&gt;true&lt;/c&gt; will execute the program against all connections.&lt;/param&gt;
        ///        /// &lt;exception cref=&quot;T:System.Data.SqlC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExecuteXmlReader {
            get {
                return ResourceManager.GetString("ExecuteXmlReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [dbo].[{0}] @ID int
        ///AS
        ///BEGIN
        ///SELECT @ID
        ///END.
        /// </summary>
        internal static string GoodSqlSproc {
            get {
                return ResourceManager.GetString("GoodSqlSproc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /// &lt;summary&gt;
        ///    ///   Used to create an object for easy calling of stored procedures or functions in a database.
        ///    /// &lt;/summary&gt;
        ///    public partial class SqlProgram&lt;{0}, {1}&gt; : SqlProgram
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Initializes a new instance of the &lt;see cref=&quot;SqlProgram&amp;lt;T&amp;gt;&quot;/&gt; class.
        ///        /// &lt;/summary&gt;
        ///        /// &lt;param name=&quot;connectionString&quot;&gt;The connection string.&lt;/param&gt;
        ///        /// &lt;param name=&quot;name&quot;&gt;The name of the stored procedure or function.&lt;/param&gt;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RootCodeTemplate {
            get {
                return ResourceManager.GetString("RootCodeTemplate", resourceCulture);
            }
        }
    }
}
