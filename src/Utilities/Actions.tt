<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
#region © Copyright Web Applications (UK) Ltd, 2015.  All rights reserved.
// Copyright (c) 2015, Web Applications UK Ltd
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Web Applications UK Ltd nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL WEB APPLICATIONS UK LTD BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#endregion

using WebApplications.Utilities.Annotations;

namespace WebApplications.Utilities
{
<#
    int maxParameters = 32;

    StringBuilder typeParams = new StringBuilder();
    StringBuilder typeComments = new StringBuilder();
    StringBuilder funcParams = new StringBuilder();
    StringBuilder funcParamsComments = new StringBuilder();

    for (int i = 1; i <= maxParameters; i++)
    {
        if (i > 1) typeParams.Append(", ");
        typeParams.AppendFormat("in T{0}", i);

        typeComments.AppendFormat("{0}    /// <typeparam name=\"T{1}\">The type of parameter {1} of the method that this delegate encapsulates.</typeparam>",
            Environment.NewLine,
            i);

        funcParamsComments.AppendFormat("{0}    /// <param name=\"arg{1}\">Parameter {1} of the method that this delegate encapsulates.</param>",
            Environment.NewLine,
            i);

        if (i > 1) funcParams.Append(", ");
        funcParams.AppendFormat("T{0} arg{0}", i);
        if (i < 17) continue;

    #>
    /// <summary>
    /// Encapsulates a method that has <#= i #> parameters and does not return a value.
    /// </summary><#= typeComments #><#= funcParamsComments #>
    [PublicAPI]
    public delegate void Action<<#= typeParams #>>(<#= funcParams #>);

<#
    }
#>
}

<#+
  // Insert any template procedures here
#>